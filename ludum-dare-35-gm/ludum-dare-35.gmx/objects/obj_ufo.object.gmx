<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_ufo</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>obj_enemy</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();

height = min(abs(y - view_yview), abs(y - view_hview));
scale = random_range(-1, 1);

if (scale &lt; 0.5 &amp;&amp; scale &gt; -0.5) {
    scale = 0.5;
}

direction = 180;
// TODO: RANDOM SPEED CAN CAUSE ISSUES WHEN SPAWNING GROUPS.
//speed = min(8, irandom_range(2, 4) * obj_spawner.speed_factor);
speed = min(6, irandom_range(2, 4) * obj_spawner.speed_factor);
movement_speed = min(8, irandom_range(2, 4) * obj_spawner.speed_factor);
image_speed = 6 / room_speed;


x_start = 0;
y_start = y;
hp = 6;

target_point_x = irandom_range(view_xview + 100, view_wview - 50);
target_point_y = irandom_range(view_yview + 50, view_hview - 50);
fired_burst = false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>repeat(10) {
    with (instance_create(x + irandom_range(-8, 8), y + irandom_range(-8, 8), obj_xp)) {
        direction = other.direction;
        // hspeed = abs(other.hspeed);
        image_angle = irandom_range(0, 359);
    }
}

instance_create(x + irandom_range(-8, 8), y + irandom_range(-8, 8), obj_explosion_enemy);
instance_create(x + irandom_range(-8, 8), y + irandom_range(-8, 8), obj_explosion_enemy);
instance_create(x + irandom_range(-8, 8), y + irandom_range(-8, 8), obj_explosion_enemy);

if (!destroy_silently) {
    obj_camera.shake = 8;
    audio_sound_gain(snd_enemy_die_big, .3, 0);
    audio_play_sound(snd_enemy_die_big, 0, false);
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>for (var i = 0; i &lt; 360; i += 15) {
    var ufo = instance_create(x, y, obj_projectile_ufo);
    ufo.direction = i;
}

alarm[0] = room_speed * 5;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//y = height * scale * sin((x - x_start) / 60) + y_start;

if point_distance(x, y, target_point_x, target_point_y) &gt; 5
{
    move_towards_point(target_point_x, target_point_y, movement_speed);
}
else 
{
    speed = 0;
    
    if (!fired_burst) {
        alarm[0] = 1;
        fired_burst = true;
    }
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
