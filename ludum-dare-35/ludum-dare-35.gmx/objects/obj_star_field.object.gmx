<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-10000</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>star_particle_system = part_system_create();
part_system_depth(star_particle_system, 10000);

star_particle_type = part_type_create();
part_type_shape(star_particle_type, pt_shape_pixel);
part_type_sprite(star_particle_type, spr_star, false, false, true);
//part_type_size(star_particle_type, 1, 1, 0, 0);
part_type_colour1(star_particle_type, c_white);
part_type_life(star_particle_type, 1000, 1000);
//part_type_speed(star_particle_type, 1, 3, 0, 0);
part_type_direction(star_particle_type, 180, 180, 0, 0);
part_type_alpha1(star_particle_type, 0.75);

// Light speed.
part_type_speed(star_particle_type, 25, 30, 0, 0);
part_type_scale(star_particle_type, 64, 1);


star_emitter = part_emitter_create(star_particle_system);
part_emitter_region(star_particle_system, star_emitter, x + 16, x + 16, y, y + view_hview, ps_shape_line, ps_distr_linear);

//part_emitter_stream(star_particle_system, star_emitter, star_particle_type, -10);

// Light speed
part_emitter_stream(star_particle_system, star_emitter, star_particle_type, 2);

//background_colour = make_colour_rgb(33, 155, 235);
background_colour = make_colour_rgb(60, 67, 207);

part_scale_x_current = 64;
part_speed_a = 25;
part_speed_b = 30;
part_stream_amount = 2;

leave_warp = false;

repeat (room_speed) {
    part_system_update(star_particle_system);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//break_bac
if (leave_warp) {
    background_colour_r = lerp(color_get_red(background_colour), 0, 0.05)
    background_colour_g = lerp(color_get_green(background_colour), 0, 0.05)
    background_colour_b = lerp(color_get_blue(background_colour), 0, 0.05)
    
    part_scale_x_current = lerp(part_scale_x_current, 1, 0.05);
    part_speed_a = lerp(part_speed_a, 1, 0.05);
    part_speed_b = lerp(part_speed_b, 3, 0.05);
    part_stream_amount = lerp(part_stream_amount, -10, 0.05);
    
    part_type_speed(star_particle_type, part_speed_a, part_speed_b, 0, 0);
    part_type_scale(star_particle_type, part_scale_x_current, 1);
    part_emitter_stream(star_particle_system, star_emitter, star_particle_type, part_stream_amount);

    background_colour = make_colour_rgb(background_colour_r, background_colour_g, background_colour_b);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="5">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>part_type_destroy(star_particle_type);
part_emitter_destroy(star_particle_system, star_emitter);
part_system_destroy(star_particle_system);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
